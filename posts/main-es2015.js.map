{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/create-post/create-post.component.ts","./src/app/components/create-post/create-post.component.html","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/navigation/navigation.component.ts","./src/app/components/navigation/navigation.component.html","./src/app/components/posts/posts.component.ts","./src/app/components/posts/posts.component.html","./src/app/components/signup/signup.component.ts","./src/app/components/signup/signup.component.html","./src/app/services/auth-guard.service.ts","./src/app/services/auth-interceptor.service.ts","./src/app/services/auth.service.ts","./src/app/services/error-handler.service.ts","./src/app/services/post.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\n\r\nimport { AuthGuard } from \"./services/auth-guard.service\";\r\n\r\nimport { HomeComponent } from \"./components/home/home.component\";\r\nimport { PostsComponent } from \"./components/posts/posts.component\";\r\nimport { LoginComponent } from \"./components/login/login.component\";\r\nimport { SignupComponent } from \"./components/signup/signup.component\";\r\n\r\nconst routes: Routes = [\r\n  { path: \"\", component: HomeComponent },\r\n  { path: \"posts\", component: PostsComponent, canActivate: [AuthGuard] },\r\n  { path: \"login\", component: LoginComponent },\r\n  { path: \"signup\", component: SignupComponent },\r\n  { path: \"**\", redirectTo: \"\" },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'posts';\r\n}\r\n","<app-navigation></app-navigation>\r\n<div class=\"container\">\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","import { BrowserModule } from \"@angular/platform-browser\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { ReactiveFormsModule } from \"@angular/forms\";\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from \"@angular/common/http\";\r\n\r\nimport { AppRoutingModule } from \"./app-routing.module\";\r\nimport { AppComponent } from \"./app.component\";\r\nimport { NoopAnimationsModule } from \"@angular/platform-browser/animations\";\r\n\r\nimport { MatButtonModule } from \"@angular/material/button\";\r\nimport { MatCardModule } from \"@angular/material/card\";\r\nimport { MatIconModule } from \"@angular/material/icon\";\r\nimport { MatInputModule } from \"@angular/material/input\";\r\nimport { MatListModule } from \"@angular/material/list\";\r\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\r\n\r\nimport { NavigationComponent } from \"./components/navigation/navigation.component\";\r\nimport { SignupComponent } from \"./components/signup/signup.component\";\r\nimport { LoginComponent } from \"./components/login/login.component\";\r\nimport { HomeComponent } from \"./components/home/home.component\";\r\nimport { PostsComponent } from \"./components/posts/posts.component\";\r\nimport { CreatePostComponent } from \"./components/create-post/create-post.component\";\r\n\r\nimport { AuthInterceptorService } from \"./services/auth-interceptor.service\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavigationComponent,\r\n    SignupComponent,\r\n    LoginComponent,\r\n    HomeComponent,\r\n    PostsComponent,\r\n    CreatePostComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    NoopAnimationsModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatToolbarModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: AuthInterceptorService,\r\n      multi: true,\r\n    },\r\n  ],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  ViewChild,\r\n  Output,\r\n  EventEmitter,\r\n} from \"@angular/core\";\r\nimport { FormControl, FormGroup, Validators, NgForm } from \"@angular/forms\";\r\n\r\nimport { first } from \"rxjs/operators\";\r\n\r\nimport { Post } from \"src/app/models/Post\";\r\n\r\nimport { AuthService } from \"src/app/services/auth.service\";\r\nimport { PostService } from \"src/app/services/post.service\";\r\n\r\n@Component({\r\n  selector: \"app-create-post\",\r\n  templateUrl: \"./create-post.component.html\",\r\n  styleUrls: [\"./create-post.component.scss\"],\r\n})\r\nexport class CreatePostComponent implements OnInit {\r\n  @ViewChild(\"formDirective\") formDirective: NgForm;\r\n  @Output() create: EventEmitter<any> = new EventEmitter();\r\n\r\n  form: FormGroup;\r\n\r\n  isOpen = false;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private postService: PostService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.createFormGroup();\r\n  }\r\n\r\n  createFormGroup(): FormGroup {\r\n    return new FormGroup({\r\n      title: new FormControl(\"\", [\r\n        Validators.required,\r\n        Validators.minLength(5),\r\n      ]),\r\n      body: new FormControl(\"\", [\r\n        Validators.required,\r\n        Validators.minLength(10),\r\n      ]),\r\n    });\r\n  }\r\n\r\n  onSubmit(formData: Pick<Post, \"title\" | \"body\">): void {\r\n    this.postService\r\n      .createPost(formData, this.authService.userId)\r\n      .pipe(first())\r\n      .subscribe(() => {\r\n        this.create.emit(null);\r\n      });\r\n    this.form.reset();\r\n    this.formDirective.resetForm();\r\n  }\r\n}\r\n","<button (click)=\"isOpen = !isOpen\" mat-raised-button color=\"accent\">\r\n  <mat-icon>add</mat-icon>Create post\r\n</button>\r\n<form\r\n  *ngIf=\"isOpen\"\r\n  [formGroup]=\"form\"\r\n  #formDirective=\"ngForm\"\r\n  (ngSubmit)=\"onSubmit(form.value)\"\r\n  novalidate\r\n>\r\n  <mat-form-field>\r\n    <mat-label>Post Title</mat-label>\r\n    <input matInput formControlName=\"title\" />\r\n  </mat-form-field>\r\n  <mat-form-field>\r\n    <mat-label>Post body</mat-label>\r\n    <input matInput formControlName=\"body\" />\r\n  </mat-form-field>\r\n  <button\r\n    color=\"accent\"\r\n    [disabled]=\"!form.valid\"\r\n    mat-raised-button\r\n    type=\"submit\"\r\n  >\r\n    <span>Post</span>\r\n  </button>\r\n</form>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>Welcome to the Social Posts home page!</p>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\r\n\r\nimport { AuthService } from \"src/app/services/auth.service\";\r\n\r\n@Component({\r\n  selector: \"app-login\",\r\n  templateUrl: \"./login.component.html\",\r\n  styleUrls: [\"./login.component.scss\"],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n\r\n  constructor(private authService: AuthService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loginForm = this.createFormGroup();\r\n  }\r\n\r\n  createFormGroup(): FormGroup {\r\n    return new FormGroup({\r\n      email: new FormControl(\"\", [Validators.required, Validators.email]),\r\n      password: new FormControl(\"\", [\r\n        Validators.required,\r\n        Validators.minLength(7),\r\n      ]),\r\n    });\r\n  }\r\n\r\n  login(): void {\r\n    this.authService\r\n      .login(this.loginForm.value.email, this.loginForm.value.password)\r\n      .subscribe();\r\n  }\r\n}\r\n","<form [formGroup]=\"loginForm\" (ngSubmit)=\"login()\" novalidate>\r\n  <mat-form-field>\r\n    <mat-label>Email</mat-label>\r\n    <input matInput placeholder=\"Ex. Jon\" formControlName=\"email\" />\r\n  </mat-form-field>\r\n  <mat-form-field>\r\n    <mat-label>Password</mat-label>\r\n    <input\r\n      matInput\r\n      type=\"password\"\r\n      placeholder=\"Ex. Jon\"\r\n      formControlName=\"password\"\r\n    />\r\n  </mat-form-field>\r\n  <button\r\n    color=\"accent\"\r\n    [disabled]=\"!loginForm.valid\"\r\n    mat-raised-button\r\n    type=\"submit\"\r\n  >\r\n    <span>Log in</span>\r\n  </button>\r\n</form>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\n\r\nimport { AuthService } from \"src/app/services/auth.service\";\r\n\r\n@Component({\r\n  selector: \"app-navigation\",\r\n  templateUrl: \"./navigation.component.html\",\r\n  styleUrls: [\"./navigation.component.scss\"],\r\n})\r\nexport class NavigationComponent implements OnInit {\r\n  isAuthenticated = false;\r\n\r\n  constructor(private authService: AuthService, private router: Router) {}\r\n\r\n  ngOnInit(): void {\r\n    this.authService.isUserLoggedIn$.subscribe((isLoggedIn) => {\r\n      this.isAuthenticated = isLoggedIn;\r\n    });\r\n  }\r\n\r\n  logout(): void {\r\n    localStorage.removeItem(\"token\");\r\n    this.authService.isUserLoggedIn$.next(false);\r\n    this.router.navigate([\"login\"]);\r\n  }\r\n}\r\n","<mat-toolbar color=\"accent\">\r\n  <span>\r\n    <a routerLink=\"/\">\r\n      <span>Social Posts</span>\r\n    </a>\r\n  </span>\r\n  <span>\r\n    <a\r\n      *ngIf=\"isAuthenticated\"\r\n      routerLinkActive=\"active-link\"\r\n      routerLink=\"/posts\"\r\n    >\r\n      <span>Posts</span>\r\n    </a>\r\n    <a\r\n      *ngIf=\"!isAuthenticated\"\r\n      routerLinkActive=\"active-link\"\r\n      routerLink=\"/login\"\r\n    >\r\n      <span>Login</span>\r\n    </a>\r\n    <a\r\n      *ngIf=\"isAuthenticated\"\r\n      (click)=\"logout()\"\r\n      routerLinkActive=\"active-link\"\r\n      routerLink=\"/login\"\r\n    >\r\n      <span>Logout</span>\r\n    </a>\r\n    <a\r\n      *ngIf=\"!isAuthenticated\"\r\n      routerLinkActive=\"active-link\"\r\n      routerLink=\"/signup\"\r\n    >\r\n      <span>Signup</span>\r\n    </a>\r\n  </span>\r\n</mat-toolbar>\r\n","import { Component, OnInit } from \"@angular/core\";\r\n\r\nimport { Observable } from \"rxjs\";\r\n\r\nimport { PostService } from \"src/app/services/post.service\";\r\nimport { AuthService } from \"src/app/services/auth.service\";\r\n\r\nimport { Post } from \"src/app/models/Post\";\r\nimport { User } from \"src/app/models/User\";\r\n\r\n@Component({\r\n  selector: \"app-posts\",\r\n  templateUrl: \"./posts.component.html\",\r\n  styleUrls: [\"./posts.component.scss\"],\r\n})\r\nexport class PostsComponent implements OnInit {\r\n  posts$: Observable<Post[]>;\r\n  userId: Pick<User, \"id\">;\r\n\r\n  constructor(\r\n    private postService: PostService,\r\n    private authService: AuthService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.posts$ = this.fetchAll();\r\n    this.userId = this.authService.userId;\r\n  }\r\n\r\n  fetchAll(): Observable<Post[]> {\r\n    return this.postService.fetchAll();\r\n  }\r\n\r\n  createPost(): void {\r\n    this.posts$ = this.fetchAll();\r\n  }\r\n\r\n  delete(postId: Pick<Post, \"id\">): void {\r\n    this.postService\r\n      .deletePost(postId)\r\n      .subscribe(() => (this.posts$ = this.fetchAll()));\r\n  }\r\n}\r\n","<app-create-post (create)=\"createPost()\"></app-create-post>\r\n\r\n<mat-card *ngFor=\"let post of posts$ | async\">\r\n  <button *ngIf=\"post.user === userId\" mat-icon-button>\r\n    <mat-icon (click)=\"delete(post.id)\" color=\"warn\">delete</mat-icon>\r\n  </button>\r\n  <div class=\"post-title\">\r\n    {{ post.title }}\r\n  </div>\r\n  <div class=\"post-meta\">\r\n    {{ post.created }}\r\n  </div>\r\n  <div class=\"post-body\">\r\n    {{ post.body }}\r\n  </div>\r\n</mat-card>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\n\r\nimport { AuthService } from \"src/app/services/auth.service\";\r\n\r\n@Component({\r\n  selector: \"app-signup\",\r\n  templateUrl: \"./signup.component.html\",\r\n  styleUrls: [\"./signup.component.scss\"],\r\n})\r\nexport class SignupComponent implements OnInit {\r\n  signupForm: FormGroup;\r\n\r\n  constructor(private authService: AuthService, private router: Router) {}\r\n\r\n  ngOnInit(): void {\r\n    this.signupForm = this.createFormGroup();\r\n  }\r\n\r\n  createFormGroup(): FormGroup {\r\n    return new FormGroup({\r\n      name: new FormControl(\"\", [Validators.required, Validators.minLength(2)]),\r\n      email: new FormControl(\"\", [Validators.required, Validators.email]),\r\n      password: new FormControl(\"\", [\r\n        Validators.required,\r\n        Validators.minLength(7),\r\n      ]),\r\n    });\r\n  }\r\n\r\n  signup(): void {\r\n    this.authService.signup(this.signupForm.value).subscribe((msg) => {\r\n      console.log(msg);\r\n      this.router.navigate([\"login\"]);\r\n    });\r\n  }\r\n}\r\n","<form [formGroup]=\"signupForm\" (ngSubmit)=\"signup()\" novalidate>\r\n  <mat-form-field>\r\n    <mat-label>First name</mat-label>\r\n    <input matInput placeholder=\"Ex. Jon\" formControlName=\"name\" />\r\n  </mat-form-field>\r\n  <mat-form-field>\r\n    <mat-label>Email</mat-label>\r\n    <input matInput placeholder=\"Ex. Jon\" formControlName=\"email\" />\r\n  </mat-form-field>\r\n  <mat-form-field>\r\n    <mat-label>Password</mat-label>\r\n    <input\r\n      matInput\r\n      type=\"password\"\r\n      placeholder=\"Ex. Jon\"\r\n      formControlName=\"password\"\r\n    />\r\n  </mat-form-field>\r\n  <button\r\n    color=\"accent\"\r\n    [disabled]=\"!signupForm.valid\"\r\n    mat-raised-button\r\n    type=\"submit\"\r\n  >\r\n    <span>Sign up</span>\r\n  </button>\r\n</form>\r\n","import { Injectable } from \"@angular/core\";\r\nimport { CanActivate, Router } from \"@angular/router\";\r\n\r\nimport { Observable } from \"rxjs\";\r\nimport { AuthService } from \"./auth.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private authService: AuthService, private router: Router) {}\r\n\r\n  canActivate(): Observable<boolean> {\r\n    if (!this.authService.isUserLoggedIn$.value) {\r\n      this.router.navigate([\"signup\"]);\r\n    }\r\n    return this.authService.isUserLoggedIn$;\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport {\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n  HttpHandler,\r\n  HttpRequest,\r\n} from \"@angular/common/http\";\r\n\r\nimport { Observable } from \"rxjs\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class AuthInterceptorService implements HttpInterceptor {\r\n  intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      const clonedRequest = req.clone({\r\n        headers: req.headers.set(\"Authorization\", \"Bearer \" + token),\r\n      });\r\n      return next.handle(clonedRequest);\r\n    } else {\r\n      return next.handle(req);\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Router } from \"@angular/router\";\r\n\r\nimport { Observable, BehaviorSubject } from \"rxjs\";\r\nimport { first, catchError, tap } from \"rxjs/operators\";\r\n\r\nimport { User } from \"../models/User\";\r\nimport { ErrorHandlerService } from \"./error-handler.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class AuthService {\r\n  private url = \"http://localhost:3000/auth\";\r\n\r\n  isUserLoggedIn$ = new BehaviorSubject<boolean>(false);\r\n  userId: Pick<User, \"id\">;\r\n\r\n  httpOptions: { headers: HttpHeaders } = {\r\n    headers: new HttpHeaders({ \"Content-Type\": \"application/json\" }),\r\n  };\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private errorHandlerService: ErrorHandlerService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  signup(user: Omit<User, \"id\">): Observable<User> {\r\n    return this.http\r\n      .post<User>(`${this.url}/signup`, user, this.httpOptions)\r\n      .pipe(\r\n        first(),\r\n        catchError(this.errorHandlerService.handleError<User>(\"signup\"))\r\n      );\r\n  }\r\n\r\n  login(\r\n    email: Pick<User, \"email\">,\r\n    password: Pick<User, \"password\">\r\n  ): Observable<{\r\n    token: string;\r\n    userId: Pick<User, \"id\">;\r\n  }> {\r\n    return this.http\r\n      .post(`${this.url}/login`, { email, password }, this.httpOptions)\r\n      .pipe(\r\n        first(),\r\n        tap((tokenObject: { token: string; userId: Pick<User, \"id\"> }) => {\r\n          this.userId = tokenObject.userId;\r\n          localStorage.setItem(\"token\", tokenObject.token);\r\n          this.isUserLoggedIn$.next(true);\r\n          this.router.navigate([\"posts\"]);\r\n        }),\r\n        catchError(\r\n          this.errorHandlerService.handleError<{\r\n            token: string;\r\n            userId: Pick<User, \"id\">;\r\n          }>(\"login\")\r\n        )\r\n      );\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\n\r\nimport { Observable, of } from \"rxjs\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class ErrorHandlerService {\r\n  handleError<T>(operation = \"operation\", result?: T) {\r\n    return (error: any): Observable<T> => {\r\n      console.log(`${operation} failed: ${error.message}`);\r\n      return of(result as T);\r\n    };\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\n\r\nimport { Observable } from \"rxjs\";\r\nimport { catchError, first } from \"rxjs/operators\";\r\n\r\nimport { Post } from \"../models/Post\";\r\nimport { User } from \"../models/User\";\r\nimport { ErrorHandlerService } from \"./error-handler.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class PostService {\r\n  private url = \"http://localhost:3000/post\";\r\n\r\n  httpOptions: { headers: HttpHeaders } = {\r\n    headers: new HttpHeaders({ \"Content-Type\": \"application/json\" }),\r\n  };\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private errorHandlerService: ErrorHandlerService\r\n  ) {}\r\n\r\n  fetchAll(): Observable<Post[]> {\r\n    return this.http\r\n      .get<Post[]>(this.url, { responseType: \"json\" })\r\n      .pipe(\r\n        catchError(this.errorHandlerService.handleError<Post[]>(\"fetchAll\", []))\r\n      );\r\n  }\r\n\r\n  createPost(\r\n    formData: Partial<Post>,\r\n    userId: Pick<User, \"id\">\r\n  ): Observable<Post> {\r\n    return this.http\r\n      .post<Post>(\r\n        this.url,\r\n        { title: formData.title, body: formData.body, user: userId },\r\n        this.httpOptions\r\n      )\r\n      .pipe(\r\n        catchError(this.errorHandlerService.handleError<Post>(\"createPost\"))\r\n      );\r\n  }\r\n\r\n  deletePost(postId: Pick<Post, \"id\">): Observable<{}> {\r\n    return this.http\r\n      .delete<Post>(`${this.url}/${postId}`, this.httpOptions)\r\n      .pipe(\r\n        first(),\r\n        catchError(this.errorHandlerService.handleError<Post>(\"deletePost\"))\r\n      );\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}